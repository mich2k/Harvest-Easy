import type { ComponentProps, FC, PropsWithChildren, ReactElement } from 'react';
import { DeepPartial } from '..';
import { FlowbiteBoolean } from '../Flowbite/FlowbiteTheme';
import { FlowbiteAccordionComponentTheme } from './AccordionContent';
import type { AccordionPanelProps } from './AccordionPanel';
import { FlowbiteAccordionTitleTheme } from './AccordionTitle';
export interface FlowbiteAccordionTheme {
    root: FlowbiteAccordionRootTheme;
    content: FlowbiteAccordionComponentTheme;
    title: FlowbiteAccordionTitleTheme;
}
export interface FlowbiteAccordionRootTheme {
    base: string;
    flush: FlowbiteBoolean;
}
export interface AccordionProps extends PropsWithChildren<ComponentProps<'div'>> {
    alwaysOpen?: boolean;
    arrowIcon?: FC<ComponentProps<'svg'>>;
    children: ReactElement<AccordionPanelProps> | ReactElement<AccordionPanelProps>[];
    flush?: boolean;
    collapseAll?: boolean;
    theme?: DeepPartial<FlowbiteAccordionRootTheme>;
}
export declare const Accordion: FC<AccordionProps> & {
    Panel: FC<AccordionPanelProps>;
    Title: FC<import("./AccordionTitle").AccordionTitleProps>;
    Content: FC<import("./AccordionContent").AccordionContentProps>;
};
