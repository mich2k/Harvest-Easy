import type { ComponentProps, PropsWithChildren, ReactNode } from 'react';
import { PaginationButtonProps } from './PaginationButton';
export interface FlowbitePaginationTheme {
    base: string;
    layout: {
        table: {
            base: string;
            span: string;
        };
    };
    pages: {
        base: string;
        showIcon: string;
        previous: {
            base: string;
            icon: string;
        };
        next: {
            base: string;
            icon: string;
        };
        selector: {
            base: string;
            active: string;
        };
    };
}
export type PaginationProps = PropsWithChildren<Pagination>;
interface Pagination extends ComponentProps<'nav'> {
    currentPage: number;
    layout?: 'navigation' | 'pagination' | 'table';
    onPageChange: (page: number) => void;
    showIcons?: boolean;
    totalPages: number;
    previousLabel?: string;
    nextLabel?: string;
    renderPaginationButton?: (props: PaginationButtonProps) => ReactNode;
}
export declare const Pagination: {
    ({ currentPage, layout, onPageChange, showIcons: showIcon, totalPages, previousLabel, nextLabel, className, renderPaginationButton, ...props }: PaginationProps): JSX.Element;
    Button: ({ active, onClick, children, className }: PaginationButtonProps) => JSX.Element;
};
export {};
