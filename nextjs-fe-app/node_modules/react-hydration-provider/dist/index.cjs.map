{"version":3,"sources":["../src/createHydration.tsx","../src/createHydrationProvider.tsx","../src/useComponentHydrated.tsx","../src/createComponents.tsx","../src/index.ts"],"names":[],"mappings":";AAAA;;;ACAA;;;ACAA;AAEO,gCAAgC;AAEtC,QAAM,CAAC,UAAU,eAAe,MAAM,SAAS,KAAK;AACpD,QAAM,UAAU,MAAM;AACrB,gBAAY,IAAI;AAAA,EACjB,GAAG,CAAC,CAAC;AAEL,SAAO;AACR;;;ADPe,iCACd,mBACC;AACD,SAAO,4BAA2B,EAAE,YAAqC;AACxE,UAAM,WAAW,qBAAqB;AACtC,WACC,qCAAC,kBAAiB,UAAjB;AAAA,MAA0B,OAAO;AAAA,OAChC,QACF;AAAA,EAEF;AACD;;;AEdA;AAWe,0BACd,cACsB;AACtB,QAAM,UAAqC,CAAC,EAAE,eAAe;AAC5D,UAAM,WAAW,aAAY;AAC7B,WAAO,CAAC,WAAW,4DAAG,QAAS,IAAM;AAAA,EACtC;AACA,QAAM,UAAqC,CAAC,EAAE,eAAe;AAC5D,UAAM,WAAW,aAAY;AAC7B,WAAO,WAAW,4DAAG,QAAS,IAAM;AAAA,EACrC;AAEA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,EACD;AACD;;;AHrBe,2BAA2B;AACzC,QAAM,oBAA2C,OAAM,cAAc,KAAK;AAE1E,QAAM,qBAAoB,wBAAwB,iBAAgB;AAElE,QAAM,eAAc,MAAe;AAClC,WAAO,OAAM,WAAW,iBAAgB;AAAA,EACzC;AAEA,QAAM,EAAE,iBAAQ,oBAAgC,iBAAiB,YAAW;AAE5E,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;;;AItBA,IAAM,EAAE,kBAAkB,mBAAmB,aAAa,QAAQ,WACjE,gBAAgB","sourcesContent":["import React from \"react\";\nimport createHydrationProvider from \"./createHydrationProvider\";\nimport createComponents from \"./createComponents\";\nimport type { HydrationComponents } from \"./createComponents\";\nexport { useComponentHydrated } from \"./useComponentHydrated\";\n\nexport default function createHydration() {\n\tconst HydrationContext: React.Context<boolean> = React.createContext(false);\n\n\tconst HydrationProvider = createHydrationProvider(HydrationContext);\n\n\tconst useHydrated = (): boolean => {\n\t\treturn React.useContext(HydrationContext);\n\t};\n\n\tconst { Server, Client }: HydrationComponents = createComponents(useHydrated);\n\n\treturn {\n\t\tHydrationContext,\n\t\tHydrationProvider,\n\t\tuseHydrated,\n\t\tServer,\n\t\tClient,\n\t};\n}\n","import React from \"react\";\nimport { useComponentHydrated } from \"./useComponentHydrated\";\n\nexport default function createHydrationProvider(\n\tHydrationContext: React.Context<boolean>\n) {\n\treturn function HydrationProvider({ children }: React.PropsWithChildren) {\n\t\tconst hydrated = useComponentHydrated();\n\t\treturn (\n\t\t\t<HydrationContext.Provider value={hydrated}>\n\t\t\t\t{children}\n\t\t\t</HydrationContext.Provider>\n\t\t);\n\t};\n}\n","import React from \"react\";\n\nexport function useComponentHydrated() {\n\t// Once useEffect() has been called, we know the app has been hydrated.\n\tconst [hydrated, setHydrated] = React.useState(false);\n\tReact.useEffect(() => {\n\t\tsetHydrated(true);\n\t}, []);\n\n\treturn hydrated;\n}\n","import React from \"react\";\n\nexport type HydrationComponentFunction = (\n\tprops: React.PropsWithChildren\n) => JSX.Element | null;\n\nexport interface HydrationComponents {\n\tServer: HydrationComponentFunction;\n\tClient: HydrationComponentFunction;\n}\n\nexport default function createComponents(\n\tuseHydrated: Function\n): HydrationComponents {\n\tconst Server: HydrationComponentFunction = ({ children }) => {\n\t\tconst hydrated = useHydrated();\n\t\treturn !hydrated ? <>{children}</> : null;\n\t};\n\tconst Client: HydrationComponentFunction = ({ children }) => {\n\t\tconst hydrated = useHydrated();\n\t\treturn hydrated ? <>{children}</> : null;\n\t};\n\n\treturn {\n\t\tServer,\n\t\tClient,\n\t};\n}\n","import createHydration, { useComponentHydrated } from \"./createHydration\";\n\nconst { HydrationContext, HydrationProvider, useHydrated, Server, Client } =\n\tcreateHydration();\n\nexport {\n\tHydrationContext,\n\tHydrationProvider,\n\tuseHydrated,\n\tServer,\n\tClient,\n\tcreateHydration,\n\tuseComponentHydrated,\n};\n"]}